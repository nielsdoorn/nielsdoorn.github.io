@inproceedings{doorn2025alianza,
  title={Alianza Europea de Innovaci{\'o}n para la Educaci{\'o}n del Testing-Proyecto ENACTEST},
  author={Doorn, Niels and Ric{\'o}s, Fernando Pastor and Marín, Beatriz and Vos, Tanja},
  booktitle={Congresso Ibero-Americano em Engenharia de Software (CIbSE)},
  pages={367--370},
  year={2025},
  organization={SBC}
}

@inproceedings{Doorn2025,
  author    = {Doorn, Niels and Vos, Tanja E. J. and Marín, Beatriz.},
  title     = {Design of a Serious Game on Exploratory Software Testing to Improve Student Engagement},
  booktitle = {Proceedings of the 20th International Conference on Evaluation of Novel Approaches to Software Engineering (ENASE 2025)},
  pages     = {806--813},
  year      = {2025},
  publisher = {SCITEPRESS -- Science and Technology Publications, Lda},
  isbn      = {978-989-758-742-9},
  issn      = {2184-4895},
  note      = {Paper published under CC license (CC BY-NC-ND 4.0)}
}

@article{ricos2024bridging,
  title={Bridging the gap between industry and academia and raising awareness of software testing bias through ENACTEST},
  author={Ricós, Fernando Pastor and Doorn, Niels and Marìn, Beatriz and Vos, Tanja},
  year={2024}
}

@InProceedings{DOORN2024FRO,
author    = {Doorn, N. and Vos, T.E.J. and Mar\'{i}n, B.},
title     = {FROM RATIONALISM TO EMPIRICISM IN EDUCATION OF SOFTWARE TESTING USING GAMIFICATION},
series    = {18th International Technology, Education and Development Conference},
booktitle = {INTED2024 Proceedings},
isbn      = {978-84-09-59215-9},
issn      = {2340-1079},
doi       = {10.21125/inted.2024.0953},
url       = {https://doi.org/10.21125/inted.2024.0953},
publisher = {IATED},
location  = {Valencia, Spain},
month     = {4-6 March, 2024},
year      = {2024},
pages     = {3586-3595}
}

@article{DOORN2023102199,
title = {Towards understanding students’ sensemaking of test case design},
journal = {Data \& Knowledge Engineering},
volume = {146},
pages = {102199},
year = {2023},
issn = {0169-023X},
doi = {https://doi.org/10.1016/j.datak.2023.102199},
url = {https://www.sciencedirect.com/science/article/pii/S0169023X23000599},
author = {Doorn, Niels and Vos, Tanja E. J. and Marín, Beatriz},
keywords = {Software Testing, Sensemaking, Software Engineering, Computer science educational research, Higher education},
abstract = {Context:
Software testing is the most used technique for quality assurance in industry. However, in computer science education software testing is still treated as a second-class citizen and students are unable to test their software well enough. One reason for this is that teaching the subject of software testing is difficult as it is a complex intellectual activity for which students need to allocate multiple cognitive resources at the same time. A myriad of primary and secondary studies have tried to solve this problem in education, however still with very limited results.
Objective:
Before we can design interventions to improve our pedagogical approaches, we need to gain more in-depth understanding and recognition of sensemaking as it is happening when students design test cases.
Method:
An initial exploratory study identified four different sensemaking approaches used by students while creating test models. In this paper we present a follow-up study with 50 students from a large university in Spain. The used methodology was based on the previous study with the improvements that originated from its evaluation. We asked the participants to create a test model based on a description of a test problem using a specialized web-based tool for modeling test cases. We measured how well these models fit the test problem, the sensemaking process that students went through when creating the models, and the students’ perception of the modeling task. The participants received no compensation for their efforts, and we scheduled the experiment during a regular class. Apart from the created models and their metadata, we also collected recordings of the students’ computer screens made during the experiment and used a questionnaire to study their perspectives on the assignment. All the collected textual, graphical, and video data was analyzed using an iterative inductive analysis process to allow new information about the different sensemaking approaches to emerge.
Results:
We gained better insights into the sensemaking processes of students while modeling test cases for a problem. The results enabled us to refine our previous findings, and we identified new sensemaking approaches.
Conclusions:
Based on these results, we can further investigate ways to influence the sensemaking process in education, the possible misconceptions that have a negative influence on it, and the desired mental model we want our students to have to design test cases.}
}

@misc{doorn2023towards,
  title={Towards understanding students' sensemaking of test case design},
  author={Doorn, Niels and Vos, Tanja E.J. and Marín, Beatriz},
  howpublished={Preprint},
  year={2023},
  month={May},
  note={Available at SSRN: \url{https://ssrn.com/abstract=4440345}},
  url={https://ssrn.com/abstract=4440345}
}

@InProceedings{10.1007/978-3-031-33080-3_31,
	author="Doorn, Niels
	and Vos, Tanja E.J.
	and Mar{\'i}n, Beatriz
	and Bockisch, Christoph
	and Dick, Steffen
	and Barendsen, Erik",
	editor="Nurcan, Selmin
	and Opdahl, Andreas L.
	and Mouratidis, Haralambos
	and Tsohou, Aggeliki",
	title="Domain TILEs: Test Informed Learning with Examples from the Testing Domain",
	booktitle="Research Challenges in Information Science: Information Science and the Connected World",
	year="2023",
	publisher="Springer Nature Switzerland",
	address="Cham",
	pages="501--508",
	abstract="Test Informed Learning with Examples (TILE) helps educators to add testing to their programming courses early, easily and in a subtle way. Currently, TILE describes how to add informed examples of testing to test runs, test cases, and messages. In this paper, we extend TILE by incorporating information from the testing domain itself into the examples. Our non-conclusive results from a survey with 300 participants indicate that using TILE, results in students creating more tests that cover more parts of the code.",
	isbn="978-3-031-33080-3",
	url = {https://doi.org/10.1007/978-3-031-33080-3_31},
	doi = {10.1007/978-3-031-33080-3_31}
}


@INPROCEEDINGS{10132188,
  author={Doorn, Niels and Vos, Tanja E. J. and Marín, Beatriz and Barendsen, Erik},
  booktitle={2023 IEEE Conference on Software Testing, Verification and Validation (ICST)}, 
  title={Set the right example when teaching programming: Test Informed Learning with Examples (TILE)}, 
  year={2023},
  volume={},
  number={},
  pages={269-280},
  doi={10.1109/ICST57152.2023.00033}}

@inproceedings{10.1145/3502717.3532112,
	author = {Doorn, Niels},
	title = {Getting Computer Science Students to Become 'Test Infected' within Design Based Education},
	year = {2022},
	month = {7},
	isbn = {9781450392006},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3502717.3532112},
	doi = {10.1145/3502717.3532112},
	abstract = {Software Testing is one of the most effective ways to increase software quality, it is a complex learning problem requiring different approaches then the learning of software programming. The focus of my research is to design an evidence based instructional design for software testing in computer science education.},
	booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 2},
	pages = {648–649},
	numpages = {2},
	keywords = {software testing, education},
	location = {Dublin, Ireland},
	series = {ITiCSE '22}
}

@inproceedings{10.1145/3507923.3507924,
	author = {Vos, Tanja E.J. and Doorn, Niels and Marín, Beatriz},
	title = {Test Informed Learning with Examples},
	year = {2021},
	month = {4},
	isbn = {9781450385763},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3507923.3507924},
	doi = {10.1145/3507923.3507924},
	abstract = { Research has demonstrated that integrating software testing in programming courses has benefits and drawbacks. This work presents Test Informed Learning with Examples (TILE), a proposal to improve teaching of testing in introductory programming courses. We will argue why we think TILE can solve most of the known drawbacks.},
	booktitle = {The 10th Computer Science Education Research Conference},
	pages = {1–2},
	numpages = {2},
	location = {Virtual Event, Netherlands},
	series = {CSERC '21}
}

@software{Doorn_Test_Informed_Learning_2021,
	author = {Doorn, Niels and Vos, Tanja E.J. and Marín, Beatriz},
	month = {9},
	title = {{Test Informed Learning with Examples assignments repository}},
	url = {https://tile-repository.github.io/},
    doi = {10.5281/zenodo.5559527},
	version = {1.0.0},
	year = {2021}
}

@inproceedings{9741999,  
	author={Doorn, Niels and Vos, Tanja E. J. and Marín, Beatriz and Passier, Harrie and Bijlsma, Lex and Cacace, Silvio},  
	booktitle={2021 IEEE 21st International Conference on Software Quality, Reliability and Security Companion (QRS-C)},   
	title={Exploring students' sensemaking of test case design. An initial study},   
	year={2021},
	month={11},
	volume={},  
	number={},  
	pages={1069-1078},  
	doi={10.1109/QRS-C55045.2021.00161},
    url = {https://doi.org/10.1109/QRS-C55045.2021.00161}
}

@inproceedings{9402198,
	title        = {How do Students Test Software Units?},
	author       = {Bijlsma, Lex and Doorn, Niels and Passier, Harrie and Pootjes, Harold and Stuurman, Sylvia},
	year         = {2021},
	month	     = {3},
	booktitle    = {2021 IEEE/ACM 43rd International Conference on Software Engineering: Software Engineering Education and Training (ICSE-SEET)},
	volume       = {},
	number       = {},
	pages        = {189--198},
	doi          = {10.1109/ICSE-SEET52601.2021.00029},
    url = {https://doi.org/10.1109/ICSE-SEET52601.2021.00029},
}